[
  {
    "id": 1,
    "visualization": "SlideAutoplay",
    "htmlCode": " <div className=\"slideshow__container\">\n <div className=\"slideshow__wrapper slideshow__wrapper1\">\n <div className=\"slideshow__item\">1</div>\n <div className=\"slideshow__item\">2</div>\n <div className=\"slideshow__item\">3</div>\n <div className=\"slideshow__item\">4</div>\n <div className=\"slideshow__item\">5</div>\n </div>\n </div>\n\n <div className=\"slideshow__container\">\n <div className=\"slideshow__wrapper slideshow__wrapper2\">\n <div className=\"slideshow__item\">1</div>\n <div className=\"slideshow__item\">2</div>\n <div className=\"slideshow__item\">3</div>\n <div className=\"slideshow__item\">4</div>\n <div className=\"slideshow__item\">5</div>\n <div className=\"slideshow__item\">6</div>\n <div className=\"slideshow__item\">7</div>\n </div>\n </div>",
    "cssCode": ".slideshow__container {\n  overflow: hidden;\n  width: 100%;\n  padding: 0 20px;\n}\n.slideshow__wrapper {\n  height: 200px;\n  width: 100%;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: calc((100% - (1.5rem * (var(--per-view) - 1))) / var(--per-view));\n  grid-gap: 1.5rem;\n  position: relative;\n  left: 0;\n  transition: 0.3s;\n}\n\n.slideshow__item {\n  background: #13c296;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.5rem;\n  font-size: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n}",
    "jsCode": "function slideShow(classSelected, options, breakpoints) {\n const itemWrapper = $(classSelected);\n const item = itemWrapper.find(\" > *\");\n const numberOfItems = item.length;\n let itemPerView;\n let totalScroll = 0;\n const delay = options.delaySelected || 2000;\n let viewportTablet = breakpoints.tablet || 800;\n let viewportMobile = breakpoints.mobile || 500;\n\n function viewportHandle() {\n if ($(window).width() <= viewportMobile) {\n itemPerView = options.itemPerViewMobile;\n return;\n }\n if ($(window).width() <= viewportTablet) {\n itemPerView = options.itemPerViewTablet;\n }\n if ($(window).width() > viewportTablet) {\n itemPerView = options.itemPerViewDesktop;\n }\n }\n viewportHandle();\n $(window).resize(function () {\n viewportHandle();\n });\n\n itemWrapper.css(\"--per-view\", itemPerView);\n for (let i = 0; i < numberOfItems; i++) {\n itemWrapper.append(item[i].outerHTML);\n }\n\n let autoScroll = setInterval(scrolling, delay);\n\n function scrolling() {\n totalScroll++;\n if (totalScroll == numberOfItems + 1) {\n clearInterval(autoScroll);\n totalScroll = 1;\n itemWrapper.css(\"transition\", \"0s\");\n itemWrapper.css(\"left\", \"0\");\n autoScroll = setInterval(scrolling, delay);\n }\n const widthEl = itemWrapper.find(\" > :first-child\").outerWidth() + 24;\n itemWrapper.css(\"left\", -${totalScroll * widthEl}px);\n itemWrapper.css(\"transition\", \".3s\");\n }\n}\n\nslideShow(\n \".slideshow__wrapper1\", // class on your html\n {\n delaySelected: 3000, // delay for autoplay (1000 === 1s)\n itemPerViewDesktop: 4, // Number of item that you want to see on DESKTOP screen\n itemPerViewTablet: 2, // Number of item that you want to see on TABLET screen\n itemPerViewMobile: 1, // Number of item that you want to see on MOBILE screen\n },\n { mobile: 500, tablet: 800 } // value in px for the breakpoints for the mobile and tablet size\n);\n\nslideShow(\n \".slideshow__wrapper2\", // class on your html\n {\n delaySelected: 2000, // delay for autoplay (1000 === 1s)\n itemPerViewDesktop: 5, // Number of item that you want to see on DESKTOP screen\n itemPerViewTablet: 3, // Number of item that you want to see on TABLET screen\n itemPerViewMobile: 2, // Number of item that you want to see on MOBILE screen\n },\n { mobile: 500, tablet: 800 } // value in px for the breakpoints for the mobile and tablet size\n);",
    "description": [
      "Fixed number of visible items",
      "Autoplay only",
      "Loop",
      "Adjustable numbers of visible items on mobile/tablet/desktop",
      "Reusable script with a className",
      "Adjustable breakpoints width for mobile/tablet"
    ]
  },
  {
    "id": 2,
    "visualization": "SliderFreeSizeItem",
    "htmlCode": "      <div className=\"nslide_free nslide1_free\">\n        <div className=\"nslide_free__slider\">\n          <div className=\"nslide_free__container_item\">\n            <div className=\"nslide_free__item\">1</div>\n            <div className=\"nslide_free__item\">2</div>\n            <div className=\"nslide_free__item\">3</div>\n            <div className=\"nslide_free__item\">4</div>\n            <div className=\"nslide_free__item\">5</div>\n            <div className=\"nslide_free__item\">6</div>\n            <div className=\"nslide_free__item\">7</div>\n            <div className=\"nslide_free__item\">8</div>\n            <div className=\"nslide_free__item\">9</div>\n            <div className=\"nslide_free__item\">10</div>\n            <div className=\"nslide_free__item\">11</div>\n            <div className=\"nslide_free__item\">12</div>\n            <div className=\"nslide_free__item\">13</div>\n          </div>\n          <button className=\"nslide_free__button--prev\">&#8592;</button>\n          <button className=\"nslide_free__button--next\">&#8594;</button>\n        </div>\n      </div>\n\n      <div className=\"nslide_free nslide2_free\">\n        <div className=\"nslide_free__slider\">\n          <div className=\"nslide_free__container_item\">\n            <div className=\"nslide_free__item\">1</div>\n            <div className=\"nslide_free__item\">2</div>\n            <div className=\"nslide_free__item\">3</div>\n            <div className=\"nslide_free__item\">4</div>\n            <div className=\"nslide_free__item\">5</div>\n            <div className=\"nslide_free__item\">6</div>\n            <div className=\"nslide_free__item\">7</div>\n            <div className=\"nslide_free__item\">8</div>\n          </div>\n          <button className=\"nslide_free__button--prev\">&#8592;</button>\n          <button className=\"nslide_free__button--next\">&#8594;</button>\n        </div>\n       </div>",
    "cssCode": ".nslide_free {\n position: relative;\n}\n\n.nslide_free__slider {\n display: flex;\n overflow-x: auto;\n gap: 20px;\n scroll-behavior: smooth;\n}\n\n.nslide_free__slider::-webkit-scrollbar {\n display: none;\n}\n\n.nslide_free__container_item {\n display: flex;\n gap: 20px;\n transition: 0.4s;\n padding-right: 50px;\n}\n\n.nslide_free__item {\n background-color: #13c296;\n display: flex;\n justify-content: center;\n align-items: center;\n font-size: 30px;\n color: white;\n border-radius: 0.5rem;\n}\n\n.nslide1_free .nslide_free__item {\n width: 200px;\n height: 200px;\n}\n\n.nslide2_free .nslide_free__item {\n height: 200px;\n width: 300px;\n}\n\n.nslide_free__button--prev,\n.nslide_free__button--next {\n position: absolute;\n top: 50%;\n transform: translateY(-50%);\n display: flex;\n justify-content: center;\n align-items: center;\n cursor: pointer;\n padding: 0 10px;\n font-size: 30px;\n z-index: 10;\n background-color: #f5f5f5;\n}\n\n.nslide_free__button--prev {\n left: 20px;\n}\n\n.nslide_free__button--next {\n right: 20px;\n}\n\n.nslide_free__button--disabled {\n opacity: 0.3;\n cursor: default;\n}\n@media (min-width: 800px) {\n .nslide_free__button--prev {\n left: 100px;\n }\n\n .nslide_free__button--next {\n right: 100px;\n }\n}",
    "jsCode": "function createSlider(nextButton, prevButton, sliderSelector) {\n  let btnNext = $(nextButton);\n  let btnPrev = $(prevButton);\n  let slider = $(sliderSelector);\n  let currentPositionScroll = slider.scrollLeft();\n  let totalWidth = slider[0].scrollWidth;\n  let visibleWidth = slider.outerWidth();\n\n  function checkDisabled() {\n    if (currentPositionScroll + visibleWidth >= totalWidth) {\n      btnNext.addClass(\"nslide_free__button--disabled\");\n    } else {\n      btnNext.removeClass(\"nslide_free__button--disabled\");\n    }\n    if (currentPositionScroll <= 0) {\n      btnPrev.addClass(\"nslide_free__button--disabled\");\n    } else {\n      btnPrev.removeClass(\"nslide_free__button--disabled\");\n    }\n  }\n  checkDisabled();\n\n  btnNext.on(\"click\", function () {\n    if (currentPositionScroll + visibleWidth >= totalWidth) {\n      return;\n    } else {\n      currentPositionScroll = currentPositionScroll + slider.width() * 0.4;\n      slider.scrollLeft(currentPositionScroll);\n\n      if (currentPositionScroll + visibleWidth >= totalWidth) {\n        currentPositionScroll = totalWidth - visibleWidth;\n      }\n    }\n    checkDisabled();\n  });\n\n  btnPrev.on(\"click\", function () {\n    if (currentPositionScroll <= 0) {\n      return;\n    } else {\n      currentPositionScroll = currentPositionScroll + slider.width() * -0.4;\n      slider.scrollLeft(currentPositionScroll);\n\n      if (currentPositionScroll < 0) {\n        currentPositionScroll = 0;\n      }\n    }\n    checkDisabled();\n  });\n}\n\n$(\".nslide_free\").each(function () {\n  createSlider(\n    $(this).find(\".nslide_free__button--next\"),\n    $(this).find(\".nslide_free__button--prev\"),\n    $(this).find(\".nslide_free__slider\")\n  );\n});",
    "description": [
      "Undefined number of visible items",
      "Free items size",
      "Buttons next and previous",
      "Reusable script with a className",
      "Slide possible on mobile/tablet screen"
    ]
  },
  {
    "id": 3,
    "visualization": "SliderFixeNumberItems",
    "htmlCode": "<div className=\"nslide__container_slider nslide1\">\n    <div className=\"nslide__slider\">\n        <div className=\"nslide__item\">1</div>\n        <div className=\"nslide__item\">2</div>\n        <div className=\"nslide__item\">3</div>\n        <div className=\"nslide__item\">4</div>\n        <div className=\"nslide__item\">5</div>\n        <div className=\"nslide__item\">6</div>\n        <div className=\"nslide__item\">7</div>\n        <div className=\"nslide__item\">8</div>\n        <div className=\"nslide__item\">9</div>\n    </div>\n\n    <button className=\"nslide__button--prev nslide__button\">&#8592;</button>\n    <button className=\"nslide__button--next nslide__button\">&#8594;</button>\n</div>\n\n<div className=\"nslide__container_slider nslide2\">\n    <div className=\"nslide__slider\">\n        <div className=\"nslide__item\">1</div>\n        <div className=\"nslide__item\">2</div>\n        <div className=\"nslide__item\">3</div>\n        <div className=\"nslide__item\">4</div>\n        <div className=\"nslide__item\">5</div>\n        <div className=\"nslide__item\">6</div>\n        <div className=\"nslide__item\">7</div>\n        <div className=\"nslide__item\">8</div>\n        <div className=\"nslide__item\">9</div>\n        <div className=\"nslide__item\">10</div>\n        <div className=\"nslide__item\">11</div>\n        <div className=\"nslide__item\">12</div>\n        <div className=\"nslide__item\">13</div>\n        <div className=\"nslide__item\">14</div>\n        <div className=\"nslide__item\">15</div>\n        <div className=\"nslide__item\">16</div>\n    </div>\n\n    <button className=\"nslide__button--prev nslide__button\">&#8592;</button>\n    <button className=\"nslide__button--next nslide__button\">&#8594;</button>\n</div>",
    "cssCode": ".nslide__container_slider {\n  width: 100%;\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  cursor: initial !important;\n}\n.nslide__slider {\n  display: flex;\n  transition: 0.3s;\n}\n.nslide__slider .nslide__item {\n  max-width: 100%;\n  height: 200px;\n  background: #13c296;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  color: white;\n}\n.nslide__item.active {\n  display: block;\n  animation: fade 0.8s;\n}\n\n.nslide__button {\n  position: absolute;\n  font-size: 30px;\n  padding: 0 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n}\n\n.nslide__button--prev {\n  left: 0;\n}\n\n.nslide__button--next {\n  right: 0;\n}\n\n.nslide__button--disabled {\n  opacity: 0.3;\n}\n",
    "jsCode": "function slider(sliderClass, options, breakpoint) {\n  const mainContainer = $(sliderClass);\n  let containerSlider = mainContainer.find(\".nslide__slider\");\n  let item = mainContainer.find(\".nslide__item\");\n  let numberItems = item.length;\n  let itemsPerSlide = options.itemsPerSlideSelected || 3;\n  let widthScreenMobile = 500 || breakpoint.mobile;\n  let widthScreenTablet = 800 || breakpoint.tablet;\n  function viewportHandle() {\n    if ($(window).width() <= widthScreenMobile) {\n      itemsPerSlide = options.itemsVisibleMobile;\n    }\n    if ($(window).width() <= widthScreenTablet) {\n      itemsPerSlide = options.itemsVisibleTablet;\n    }\n    if ($(window).width() > widthScreenTablet) {\n      itemsPerSlide = itemsPerSlide;\n    }\n  }\n  viewportHandle();\n  $(window).resize(function () {\n    viewportHandle();\n  });\n\n  let widthItem;\n  let gap = options.gapSelected || 30;\n  let gapTotal = (numberItems - 1) * gap;\n  let gapPerSlide = (itemsPerSlide - 1) * gap;\n  let currentTranslation = 0;\n  let nbItemsWithoutFirstItems = numberItems - itemsPerSlide;\n  let nextButton = mainContainer.find(\".nslide__button--next\");\n  let prevButton = mainContainer.find(\".nslide__button--prev\");\n\n  widthItem = (mainContainer.width() - gapPerSlide) / itemsPerSlide;\n  item.css(\"width\", widthItem + \"px\");\n  containerSlider.css(\"gap\", gap);\n  containerSlider.css(\"width\", widthItem * numberItems + gapTotal);\n\n  let widthItemPlusGap = widthItem + gap;\n  let widthTotalWithoutFirstItem = nbItemsWithoutFirstItems * (gap + widthItem);\n  function checkDisableButton() {\n    if (currentTranslation < -widthTotalWithoutFirstItem + 1) {\n      nextButton.addClass(\"nslide__button--disabled\");\n    } else {\n      nextButton.removeClass(\"nslide__button--disabled\");\n    }\n    if (currentTranslation >= 0) {\n      prevButton.addClass(\"nslide__button--disabled\");\n    } else {\n      prevButton.removeClass(\"nslide__button--disabled\");\n    }\n  }\n  checkDisableButton();\n\n  var initPosX;\n  let isDragging = false;\n  let distance;\n  mainContainer.mousedown(function (event) {\n    initPosX = event.pageX;\n    $(this).on(\"mousemove\", function (event) {\n      distance = event.pageX - initPosX;\n      isDragging = true;\n    });\n  });\n\n  mainContainer.mouseup(function () {\n    // $(this).off(\"mousemove\");\n    if (distance < -widthItem && isDragging) {\n      translationSlider(-1);\n    } else if (distance > widthItem && isDragging) {\n      translationSlider(1);\n    }\n    distance = 0;\n    isDragging = false;\n  });\n\n  function translationSlider(e) {\n if (e === -1 && currentTranslation < -widthTotalWithoutFirstItem + 1) {\n return;\n }\n if (e === 1 && currentTranslation >= 0) {\n return;\n } else {\n currentTranslation += widthItemPlusGap * e;\n containerSlider.css(\n \"transform\",\n \"translateX(\" + currentTranslation + \"px)\"\n );\n }\n checkDisableButton();\n }\n\n nextButton.on(\"click\", () => {\n translationSlider(-1);\n });\n\n prevButton.on(\"click\", () => {\n translationSlider(1);\n });\n}\n\nslider(\n \".nslide1\", // Class name of your html\n {\n gapSelected: 45, // Gap between items\n itemsPerSlideSelected: 3, // Number of items visible on DESKTOP screen\n itemsVisibleTablet: 2, // Number of items visible on TABLET screen\n itemsVisibleMobile: 1, // Number of items visible on MOBILE screen\n },\n { mobile: 500, tablet: 800 } // Breakpoint for mobile and tablet screen\n);\n\nslider(\n \".nslide2\", // Class name of your html\n {\n gapSelected: 10, // Gap between items\n itemsPerSlideSelected: 5, // Number of items visible on DESKTOP screen\n itemsVisibleTablet: 2, // Number of items visible on TABLET screen\n itemsVisibleMobile: 1, // Number of items visible on MOBILE screen\n },\n { mobile: 500, tablet: 800 } // Breakpoint for mobile and tablet screen\n);",
    "description": [
      "Exact number of visible items",
      "Adjustable numbers of visible items on mobile/tablet/desktop",
      "Adjustable gap between items",
      "Adjustable breakpoints width for mobile/tablet",
      "Reusable script with a className",
      "Buttons next and previous"
    ]
  }
]
